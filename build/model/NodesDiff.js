/**
 * Pydio API V2
 * Access to a Pydio Server. Second version of the API.
 *
 * OpenAPI spec version: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

'use strict';

Object.defineProperty(exports, '__esModule', {
    value: true
});

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

var _ApiClient = require('../ApiClient');

var _ApiClient2 = _interopRequireDefault(_ApiClient);

var _Node = require('./Node');

var _Node2 = _interopRequireDefault(_Node);

/**
* The NodesDiff model module.
* @module model/NodesDiff
* @version 2.0.0
*/

var NodesDiff = (function () {
    /**
    * Constructs a new <code>NodesDiff</code>.
    * Description of node removed / added / updated in the backend
    * @alias module:model/NodesDiff
    * @class
    */

    function NodesDiff() {
        _classCallCheck(this, NodesDiff);

        this.add = undefined;
        this.update = undefined;
        this.remove = undefined;
    }

    /**
    * Constructs a <code>NodesDiff</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/NodesDiff} obj Optional instance to populate.
    * @return {module:model/NodesDiff} The populated <code>NodesDiff</code> instance.
    */

    _createClass(NodesDiff, null, [{
        key: 'constructFromObject',
        value: function constructFromObject(data, obj) {
            if (data) {
                obj = obj || new NodesDiff();

                if (data.hasOwnProperty('add')) {
                    obj['add'] = _ApiClient2['default'].convertToType(data['add'], [_Node2['default']]);
                }
                if (data.hasOwnProperty('update')) {
                    obj['update'] = _ApiClient2['default'].convertToType(data['update'], [_Node2['default']]);
                }
                if (data.hasOwnProperty('remove')) {
                    obj['remove'] = _ApiClient2['default'].convertToType(data['remove'], ['String']);
                }
            }
            return obj;
        }

        /**
        * @member {Array.<module:model/Node>} add
        */
    }]);

    return NodesDiff;
})();

exports['default'] = NodesDiff;
module.exports = exports['default'];

/**
* Nodes may have an additional attribute original_path
* @member {Array.<module:model/Node>} update
*/

/**
* @member {Array.<String>} remove
*/
