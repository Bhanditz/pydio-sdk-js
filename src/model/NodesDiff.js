/**
 * Pydio API V2
 * Access to a Pydio Server. Second version of the API.
 *
 * OpenAPI spec version: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */


import ApiClient from '../ApiClient';
import Node from './Node';





/**
* The NodesDiff model module.
* @module model/NodesDiff
* @version 2.0.0
*/
export default class NodesDiff {
    /**
    * Constructs a new <code>NodesDiff</code>.
    * Description of node removed / added / updated in the backend
    * @alias module:model/NodesDiff
    * @class
    */

    constructor() {
        

        
        

        

        
    }

    /**
    * Constructs a <code>NodesDiff</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/NodesDiff} obj Optional instance to populate.
    * @return {module:model/NodesDiff} The populated <code>NodesDiff</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new NodesDiff();

            
            
            

            if (data.hasOwnProperty('add')) {
                obj['add'] = ApiClient.convertToType(data['add'], [Node]);
            }
            if (data.hasOwnProperty('update')) {
                obj['update'] = ApiClient.convertToType(data['update'], [Node]);
            }
            if (data.hasOwnProperty('remove')) {
                obj['remove'] = ApiClient.convertToType(data['remove'], ['String']);
            }
        }
        return obj;
    }

    /**
    * @member {Array.<module:model/Node>} add
    */
    add = undefined;
    /**
    * Nodes may have an additional attribute original_path
    * @member {Array.<module:model/Node>} update
    */
    update = undefined;
    /**
    * @member {Array.<String>} remove
    */
    remove = undefined;








}


