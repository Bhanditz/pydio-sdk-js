/**
 * Pydio API V2
 * Access to a Pydio Server. Second version of the API.
 *
 * OpenAPI spec version: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.PydioApiV2);
  }
}(this, function(expect, PydioApiV2) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new PydioApiV2.ProvisioningApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ProvisioningApi', function() {
    describe('adminAddWorkspaceFeature', function() {
      it('should call adminAddWorkspaceFeature successfully', function(done) {
        //uncomment below and update the code to test adminAddWorkspaceFeature
        //instance.adminAddWorkspaceFeature(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('adminCreateWorkspace', function() {
      it('should call adminCreateWorkspace successfully', function(done) {
        //uncomment below and update the code to test adminCreateWorkspace
        //instance.adminCreateWorkspace(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('adminDeleteWorkspace', function() {
      it('should call adminDeleteWorkspace successfully', function(done) {
        //uncomment below and update the code to test adminDeleteWorkspace
        //instance.adminDeleteWorkspace(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('adminEditWorkspace', function() {
      it('should call adminEditWorkspace successfully', function(done) {
        //uncomment below and update the code to test adminEditWorkspace
        //instance.adminEditWorkspace(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('adminEditWorkspaceFeature', function() {
      it('should call adminEditWorkspaceFeature successfully', function(done) {
        //uncomment below and update the code to test adminEditWorkspaceFeature
        //instance.adminEditWorkspaceFeature(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('adminGetWorkspace', function() {
      it('should call adminGetWorkspace successfully', function(done) {
        //uncomment below and update the code to test adminGetWorkspace
        //instance.adminGetWorkspace(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('adminListWorkspaces', function() {
      it('should call adminListWorkspaces successfully', function(done) {
        //uncomment below and update the code to test adminListWorkspaces
        //instance.adminListWorkspaces(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('adminRemoveWorkspaceFeature', function() {
      it('should call adminRemoveWorkspaceFeature successfully', function(done) {
        //uncomment below and update the code to test adminRemoveWorkspaceFeature
        //instance.adminRemoveWorkspaceFeature(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('adminUpdateWorkspace', function() {
      it('should call adminUpdateWorkspace successfully', function(done) {
        //uncomment below and update the code to test adminUpdateWorkspace
        //instance.adminUpdateWorkspace(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createPeople', function() {
      it('should call createPeople successfully', function(done) {
        //uncomment below and update the code to test createPeople
        //instance.createPeople(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createRole', function() {
      it('should call createRole successfully', function(done) {
        //uncomment below and update the code to test createRole
        //instance.createRole(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deletePeople', function() {
      it('should call deletePeople successfully', function(done) {
        //uncomment below and update the code to test deletePeople
        //instance.deletePeople(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteRole', function() {
      it('should call deleteRole successfully', function(done) {
        //uncomment below and update the code to test deleteRole
        //instance.deleteRole(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPeople', function() {
      it('should call getPeople successfully', function(done) {
        //uncomment below and update the code to test getPeople
        //instance.getPeople(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getRole', function() {
      it('should call getRole successfully', function(done) {
        //uncomment below and update the code to test getRole
        //instance.getRole(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getRoles', function() {
      it('should call getRoles successfully', function(done) {
        //uncomment below and update the code to test getRoles
        //instance.getRoles(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchPeople', function() {
      it('should call patchPeople successfully', function(done) {
        //uncomment below and update the code to test patchPeople
        //instance.patchPeople(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateRole', function() {
      it('should call updateRole successfully', function(done) {
        //uncomment below and update the code to test updateRole
        //instance.updateRole(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
